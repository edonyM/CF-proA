 /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 #        .---.         .-----------  
 #       /     \  __  /    ------    
 #      / /     \(  )/    -----   (`-')  _ _(`-')              <-. (`-')_            
 #     //////    '\/ `   ---      ( OO).-/( (OO ).->     .->      \( OO) )     .->   
 #    //// / //  :   : ---      (,------. \    .'_ (`-')----. ,--./ ,--/  ,--.'  ,-.
 #   // /   /  / `\/ '--         |  .---' '`'-..__)( OO).-. ' |   \ |  | (`-')'.'  /
 #  //          //..\\          (|  '--.  |  |  ' |( _) | | | |  . '|  |)(OO \    / 
 # ============UU====UU====      |  .--'  |  |  / : \|  |)| | |  |\    |  |  /   /) 
 #             '//||\\`          |  `---. |  '-'  /  '  '-' ' |  | \   |  `-/   /`  
 #               ''``            `------' `------'    `-----' `--'  `--'    `--'    
 # ########################################################################################################
 # 
 # Author: edony - edonyzpc@gmail.com                 
 # 
 # twitter : @edonyzpc                                
 # 
 # Last modified: 2014-10-25 15:06
 # 
 # Filename: conclude.txt
 # 
 # Description: All Rights Are Reserved                 
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
=========================================================================================================================
 Problem Digest
========================================================================================================================= 
A. I Wanna Be the Guy
time limit per test: 1 second
memory limit per test: 256 megabytes
input: standard input
output: standard output
There is a game called "I Wanna Be the Guy", consisting of n levels. Little X and his friend Little Y are
addicted to the game. Each of them wants to pass the whole game.
Little X can pass only p levels of the game. And Little Y can pass only q levels of the game. You are given
the indices of levels Little X can pass and the indices of levels Little Y can pass. Will Little X and Little Y pass
the whole game, if they cooperate each other?
Input
The first line contains a single integer n (1?≤?? n?≤?100).
The next line contains an integer p (0?≤? p?≤? n) at first, then follows p distinct integers a ,? a ,?...,? a (1?≤? a
≤? n). These integers denote the indices of levels Little X can pass. The next line contains the levels Little Y
can pass in the same format. It's assumed that levels are numbered from 1 to n.
Output
If they can pass all the levels, print "I become the guy. ". If it's impossible, print "Oh, my
keyboard! " (without the quotes).
Sample test(s)
input
4
3 1 2 3
2 2 4
output
I become the guy!

input
4
3 1 2 3
2 2 3
output
Oh, my keyboard.

Note
In the first sample, Little X can pass levels [1 2 3], and Little Y can pass level [2 4], so they can pass all the
levels both.
In the second sample, no one can pass level 4.
=========================================================================================================================
=========================================================================================================================
All the better methods to solve this problem are using int-array to record each integer input. 
For instance,

intput:

    4
    3 1 2 3
    2 2 4

Running:

    int a[200]
    p: a[1]=1 a[2]=1 a[3]=1
    q: a[2]=1 a[4]=1

Check:

    for(int i=1;i<n;i++)
    {
        if(0==a[i])cout<<"Oh, my keyboard!"<<endl;
        return 0;
    }
    cout<<"I become the guy."<<endl;


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
My method is compare each integer from 1 to n, if all match then output the "I become the guy."But facing different inputs, edge value like 0 for instance, I must have to treat it as a special one which is not a good idea to figure all boundary value out.

Conclusion:
    When I have to treat some spesial values, this method definitely can be better!
    
