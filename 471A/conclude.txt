 /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 #        .---.         .-----------  
 #       /     \  __  /    ------    
 #      / /     \(  )/    -----   (`-')  _ _(`-')              <-. (`-')_            
 #     //////    '\/ `   ---      ( OO).-/( (OO ).->     .->      \( OO) )     .->   
 #    //// / //  :   : ---      (,------. \    .'_ (`-')----. ,--./ ,--/  ,--.'  ,-.
 #   // /   /  / `\/ '--         |  .---' '`'-..__)( OO).-. ' |   \ |  | (`-')'.'  /
 #  //          //..\\          (|  '--.  |  |  ' |( _) | | | |  . '|  |)(OO \    / 
 # ============UU====UU====      |  .--'  |  |  / : \|  |)| | |  |\    |  |  /   /) 
 #             '//||\\`          |  `---. |  '-'  /  '  '-' ' |  | \   |  `-/   /`  
 #               ''``            `------' `------'    `-----' `--'  `--'    `--'    
 # ########################################################################################################
 # 
 # Author: edony - edonyzpc@gmail.com                 
 # 
 # twitter : @edonyzpc                                
 # 
 # Last modified: 2014-10-25 20:44
 # 
 # Filename: conclude.txt
 # 
 # Description: All Rights Are Reserved                 
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/ 
==========================================================================================================
prolem digest
==========================================================================================================
A. MUH and Sticks
time limit per test: 1 second
memory limit per test: 256 megabytes
input: standard input
output: standard output

Two polar bears Menshykov and Uslada from the St.Petersburg zoo and elephant Horace from the Kiev zoo
got six sticks to play with and assess the animals' creativity. Menshykov, Uslada and Horace decided to make
either an elephant or a bear from those sticks. They can make an animal from sticks in the following way:
Four sticks represent the animal's legs, these sticks should have the same length.
Two remaining sticks represent the animal's head and body. The bear's head stick must be shorter than
the body stick. The elephant, however, has a long trunk, so his head stick must be as long as the body
stick. Note that there are no limits on the relations between the leg sticks and the head and body sticks.
Your task is to find out which animal can be made from the given stick set. The zoo keeper wants the sticks
back after the game, so they must never be broken, even bears understand it.

Input
The single line contains six space-separated integers l  (1?≤? l ?≤?9) — the lengths of the six sticks. It is
guaranteed that the input is such that you cannot make both animals from the sticks.

Output
If you can make a bear from the given set, print string "Bear" (without the quotes). If you can make an
elephant, print string "Elephant" (w?thout the quotes). If you can make neither a bear nor an elephant, print
string "Alien" (without the quotes).

Sample test(s)
input
4 2 5 4 4 4
output
Bear

input
4 4 5 4 4 5
output
Elephant

input
1 2 3 4 5 6
output
Alien

Note
If you're out of creative ideas, see instructions below which show how to make a bear and an elephant in the
first two samples. The stick of length 2 is in red, the sticks of length 4 are in green, the sticks of length 5 are
in blue.
===================================================================================================================
better method to solve this problem
===================================================================================================================

#include <cstdio>
using namespace std;
int a[10];

int main()
{
    int i, j;
    for (i = 0; i < 6; i++) {
        int x;
        scanf("%d", &x);
        a[x]++;
    }
    for (i = 1; i < 10; i++) {
        if (a[i] >= 4) {
            a[i] -= 4;
            for (j = 1; j < 10; j++) {
                if (a[j] == 2) {
                    puts("Elephant");
                    return 0;
                }
            }
            puts("Bear");
            return 0;
        }
    }
    puts("Alien");
    return 0;
}
====================================================================================================================
I try to record the input, but some special boundary value need to be treated specially. In its method, it applys int-array into it. 
